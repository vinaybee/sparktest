/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'admin' at '4/7/16 1:40 AM' with Gradle 2.11
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

defaultTasks 'assemble'


// Apply the java plugin to add support for Java

apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'application'

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala']
        }
    }
    test {
        scala {
            srcDirs = ['test/scala']
        }
    }
}


//mainClassName = theMainClass
mainClassName = ''


// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
}

configurations {
    libraries
}



// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile group: 'org.scala-lang', name: 'scala-compiler', version:'2.10.4'
    compile group: 'org.apache.spark', name: 'spark-core_2.10', version:'1.5.0'
    compile group: 'org.apache.spark', name: 'spark-streaming_2.10', version:'1.5.0'
    compile group: 'org.apache.spark', name: 'spark-streaming-kafka_2.10', version:'1.5.0'
    configurations.compile.extendsFrom(configurations.libraries)
}



jar {
    baseName = rootProject.name
    version = 1.0
}

// create a fat jar with all dependencies
task fatJar(type: Jar) {
    zip64 true
    manifest.from jar.manifest
    baseName = rootProject.name
    classifier = 'fat'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    exclude('META-INF/*.RSA')
    exclude('META-INF/*.SF')
    exclude('META-INF/*.DSA')

    /*exclude('META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA')*/
}




